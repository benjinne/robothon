#!/usr/bin/env python

import rospy
from cv2 import *
import numpy as np
import actionlib
from trajectory_msgs.msg import *
from sensor_msgs.msg import JointState
from control_msgs.msg import *

JOINT_NAMES = ['shoulder_pan_joint', 'shoulder_lift_joint', 'elbow_joint', 'wrist_1_joint', 'wrist_2_joint', 'wrist_3_joint']
rospy.init_node('bens_node', anonymous=True, disable_signals=True)
my_client = actionlib.SimpleActionClient('follow_joint_trajectory', FollowJointTrajectoryAction)
succ = my_client.wait_for_server(timeout=rospy.Duration(10))

board1 = [-3.4229443709002894, -1.7821601072894495, 2.718715190887451, -0.966079060231344, 1.4054919481277466, 0.02844718098640442]
board2 = [-3.2743313948260706, -1.6557133833514612, 2.6738076210021973, -0.9783909956561487, 1.4991707801818848, 0.02839924395084381]
board3 = [-3.2103965918170374, -1.693007771168844, 2.58252215385437, -0.9229639212237757, 1.4482475519180298, 0.012366222217679024]
board4 = [-3.138555351887838, -1.603715721760885, 2.467524528503418, -0.8437069098102015, 1.6489073038101196, 0.012354237958788872]
board5 = [-3.2739718596087855, -1.3821218649493616, 2.4250476360321045, -0.9994705359088343, 1.4368269443511963, 0.028375275433063507]
board6 = [-3.3636329809771937, -1.4404061476336878, 2.455526828765869, -1.0181906859027308, 1.3702448606491089, 0.0280277319252491]
board7 = [-3.4527443091021937, -1.652250115071432, 2.4688668251037598, -0.6950834433185022, 1.4122941493988037, 0.012701780535280704]
board8 = [-3.5628631750689905, -1.7930658499347132, 2.6133053302764893, -0.819671932850973, 1.1924992799758911, 0.01258193887770176]
boardup = [-3.3740573565112513, -1.8141472975360315, 2.407045841217041, -0.6599496046649378, 1.3523688316345215, 0.01261789072304964]
camera = [-3.2671666781054896, -1.4993389288531702, 2.3634088039398193, -0.029624287282125294, 1.7136157751083374, 0.9688253402709961]

def moveto(new_pose):
	g = FollowJointTrajectoryGoal()
	g.trajectory = JointTrajectory()
	g.trajectory.joint_names = JOINT_NAMES
	joint_states = rospy.wait_for_message('/joint_states', JointState)
	joint_pos = joint_states.position
	g.trajectory.points = [
		JointTrajectoryPoint(positions=joint_pos, velocities=[0]*6, time_from_start=rospy.Duration(0.0)),
		JointTrajectoryPoint(positions=new_pose, velocities=[0]*6, time_from_start=rospy.Duration(2.0))
	]
	my_client.send_goal(g)
	my_client.wait_for_result()

def takePic():
	# initialize the camera
	cam = VideoCapture(0)   # 0 -> index of camera
	s, img = cam.read()
	s, img = cam.read()
	
	bw = Canny(img, 30, 150)
	
	if s:    # frame captured without any errors
		namedWindow("cam-test",100)
		imshow("cam-test",bw)
		imwrite("board.jpg",bw) #save image

if succ:
	moveto(camera)
	takePic()
	#moveto(boardup)
	#moveto(board1)
	#moveto(board6)
	#moveto(boardup)
	#moveto(board2)
	#moveto(board5)
	#moveto(boardup)
	#moveto(board8)
	#moveto(board3)
	#moveto(boardup)
	#moveto(board7)
	#moveto(board4)
	#moveto(boardup)
	
	waitKey(0)
	destroyWindow("cam-test")
		
	
else:
	print "uh oh!"
	
	
	
	
		
	#[-3.422776524220602, -1.864903752003805, 2.6830501556396484, -0.8349884192096155, 1.40559983253479, 0.028590990230441093]
	#[-3.2814484278308313, -1.8397348562823694, 2.6765763759613037, -0.8936460653888147, 1.483060598373413, 0.012354237958788872]
	#[-3.2103965918170374, -1.693007771168844, 2.58252215385437, -0.9229639212237757, 1.4482475519180298, 0.012366222217679024]
	#[-3.138555351887838, -1.603715721760885, 2.467524528503418, -0.8437069098102015, 1.6489073038101196, 0.012354237958788872]
	#[-3.2501519362079065, -1.5155041853534144, 2.390697956085205, -0.8681967894183558, 1.5251061916351318, 0.012378206476569176]
	#[-3.3186882177936, -1.527020279561178, 2.377598762512207, -0.7984989325152796, 1.5263299942016602, 0.012450112029910088]
	#[-3.4527443091021937, -1.652250115071432, 2.4688668251037598, -0.6950834433185022, 1.4122941493988037, 0.012701780535280704]
	#[-3.5628631750689905, -1.7930658499347132, 2.6133053302764893, -0.819671932850973, 1.1924992799758911, 0.01258193887770176]
	
	#[-3.3740573565112513, -1.8141472975360315, 2.407045841217041, -0.6599496046649378, 1.3523688316345215, 0.01261789072304964]